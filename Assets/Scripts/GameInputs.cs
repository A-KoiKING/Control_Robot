//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/Scripts/GameInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/Scripts/GameInputs.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @GameInputs: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @GameInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputs"",
    ""maps"": [
        {
            ""name"": ""Control"",
            ""id"": ""f775f4c4-fa1a-409e-abca-cfe2b20f2e7b"",
            ""actions"": [
                {
                    ""name"": ""LeftStick"",
                    ""type"": ""Value"",
                    ""id"": ""a033f628-92e8-4a68-9347-190a5c32ccba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStick"",
                    ""type"": ""Value"",
                    ""id"": ""c75dd535-5569-4606-8885-82e9cc48887d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""7234b30b-a6b3-4dd0-9bcc-8d9f90c7c7ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""9b57f516-ac9d-4d43-9607-6a76358bf40e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""9067e294-6d7a-4230-9a94-0bfd72d224af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""2ba74024-1d42-414f-ae23-c9e378977213"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Triangle"",
                    ""type"": ""Button"",
                    ""id"": ""a3626b38-5753-4f4a-a33f-7ad3701d53aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Square"",
                    ""type"": ""Button"",
                    ""id"": ""f1e7f540-1d3c-4031-8107-817b2d839853"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cross"",
                    ""type"": ""Button"",
                    ""id"": ""b11189ac-dbc4-42b6-ac90-e6d4f9257b65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Circle"",
                    ""type"": ""Button"",
                    ""id"": ""6cc40a80-b3a2-4b0a-96e7-e42258aed930"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LSB"",
                    ""type"": ""Button"",
                    ""id"": ""3ce2f33d-4700-4be1-b394-3c5444137785"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RSB"",
                    ""type"": ""Button"",
                    ""id"": ""c74aa357-6d98-4b25-89c4-994a0cb92682"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L1"",
                    ""type"": ""Button"",
                    ""id"": ""6bca530e-16d8-4334-92d0-2ac7615a84e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R1"",
                    ""type"": ""Button"",
                    ""id"": ""508a6ee9-1249-42f7-abca-bcb1554ea256"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L2"",
                    ""type"": ""Value"",
                    ""id"": ""5bbcd02b-14c9-4d9e-916b-5dba9471eda0"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""R2"",
                    ""type"": ""Value"",
                    ""id"": ""04492cc1-fd81-44ee-9ad9-e118019c49a8"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Auto_1"",
                    ""type"": ""Button"",
                    ""id"": ""c86479c1-5d68-4a96-960f-5d394771d3c7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_2"",
                    ""type"": ""Button"",
                    ""id"": ""740b2585-9ca2-4369-b257-ea876f69c5b3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_3"",
                    ""type"": ""Button"",
                    ""id"": ""42a634f3-223e-46c6-bcc9-5cf25da7157a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_4"",
                    ""type"": ""Button"",
                    ""id"": ""e0319077-f811-4057-b761-b2fc5a4482cf"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_5"",
                    ""type"": ""Button"",
                    ""id"": ""f42aebb3-f9ec-477d-9f16-16c5c600b1b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_6"",
                    ""type"": ""Button"",
                    ""id"": ""5360ccc5-1cb0-4ff5-982c-cf5f301919bb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_7"",
                    ""type"": ""Button"",
                    ""id"": ""75042fa9-1390-4efe-8704-f213af1e1f01"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_8"",
                    ""type"": ""Button"",
                    ""id"": ""2c3fcdbd-350d-4ab2-9281-90bd2f319a19"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_9"",
                    ""type"": ""Button"",
                    ""id"": ""f45bb684-5834-49a2-9468-be029c441c8e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_10"",
                    ""type"": ""Button"",
                    ""id"": ""4526ace9-8a58-490f-a05d-f6860138ea06"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Auto_11"",
                    ""type"": ""Button"",
                    ""id"": ""04c2c1d9-0939-43b2-bfe3-6bd58d87b034"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3b05d5fc-0d26-4667-9231-b78bd3847b5f"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35aa7cfd-f5e3-46c2-9829-60381e87401a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19328312-c8a2-4d13-b3dd-95815499ca75"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18e75954-910a-4891-b309-96e4c3c33a19"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a450f4b6-5377-433c-a68f-63e4a196bba9"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d02742b-6f52-43ea-a3a3-e5d46599374c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Triangle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""339e1537-54ef-4b50-a60d-2ef7d55b8997"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Square"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c82b2c16-a5e9-44a7-8957-c2e51b1b91c2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cross"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a92aa534-ef6f-4696-a20b-aa8477031446"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Circle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40ed6dd5-0384-4dd8-aaec-af8098ee4576"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LSB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf836c20-a29c-4da7-9592-78b66cdbfd81"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RSB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b55e62c-21ba-4965-9d99-9e59fe3066cb"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6112952-4e98-4251-a121-72e4f6d7c7c8"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b17cad4-f7b7-428a-a8ba-5538ae173b1f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd416f0b-3e19-48f2-bfd9-7c65729d0726"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e17e22e0-c224-4afd-99b4-05ff5332e7aa"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a11ee7e1-a270-459d-9d99-b3305c6bbb79"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b810aac0-0a33-4799-a97b-aa4e76e946e6"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""916e240f-16f9-42d5-a680-b7e52a049451"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9a95d3c-80fa-48ee-96c9-ae77f4e980ba"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""748205f6-8fc1-47b2-b51f-9cc25cee945a"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5a6cc1e-4cb2-4447-9791-bddc8be3b987"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40d7d43c-bca0-439e-b002-93902fc587dc"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2934479d-7a91-4023-9446-148f2b0604f2"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5edd50f6-7d2c-452b-b826-be8b109e621d"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8aea37c3-fbb7-472f-b98b-02a9945391a7"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47765c37-c57b-4079-a21f-6eb1078c6d30"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Auto_11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Control
        m_Control = asset.FindActionMap("Control", throwIfNotFound: true);
        m_Control_LeftStick = m_Control.FindAction("LeftStick", throwIfNotFound: true);
        m_Control_RightStick = m_Control.FindAction("RightStick", throwIfNotFound: true);
        m_Control_Up = m_Control.FindAction("Up", throwIfNotFound: true);
        m_Control_Left = m_Control.FindAction("Left", throwIfNotFound: true);
        m_Control_Down = m_Control.FindAction("Down", throwIfNotFound: true);
        m_Control_Right = m_Control.FindAction("Right", throwIfNotFound: true);
        m_Control_Triangle = m_Control.FindAction("Triangle", throwIfNotFound: true);
        m_Control_Square = m_Control.FindAction("Square", throwIfNotFound: true);
        m_Control_Cross = m_Control.FindAction("Cross", throwIfNotFound: true);
        m_Control_Circle = m_Control.FindAction("Circle", throwIfNotFound: true);
        m_Control_LSB = m_Control.FindAction("LSB", throwIfNotFound: true);
        m_Control_RSB = m_Control.FindAction("RSB", throwIfNotFound: true);
        m_Control_L1 = m_Control.FindAction("L1", throwIfNotFound: true);
        m_Control_R1 = m_Control.FindAction("R1", throwIfNotFound: true);
        m_Control_L2 = m_Control.FindAction("L2", throwIfNotFound: true);
        m_Control_R2 = m_Control.FindAction("R2", throwIfNotFound: true);
        m_Control_Auto_1 = m_Control.FindAction("Auto_1", throwIfNotFound: true);
        m_Control_Auto_2 = m_Control.FindAction("Auto_2", throwIfNotFound: true);
        m_Control_Auto_3 = m_Control.FindAction("Auto_3", throwIfNotFound: true);
        m_Control_Auto_4 = m_Control.FindAction("Auto_4", throwIfNotFound: true);
        m_Control_Auto_5 = m_Control.FindAction("Auto_5", throwIfNotFound: true);
        m_Control_Auto_6 = m_Control.FindAction("Auto_6", throwIfNotFound: true);
        m_Control_Auto_7 = m_Control.FindAction("Auto_7", throwIfNotFound: true);
        m_Control_Auto_8 = m_Control.FindAction("Auto_8", throwIfNotFound: true);
        m_Control_Auto_9 = m_Control.FindAction("Auto_9", throwIfNotFound: true);
        m_Control_Auto_10 = m_Control.FindAction("Auto_10", throwIfNotFound: true);
        m_Control_Auto_11 = m_Control.FindAction("Auto_11", throwIfNotFound: true);
    }

    ~@GameInputs()
    {
        UnityEngine.Debug.Assert(!m_Control.enabled, "This will cause a leak and performance issues, GameInputs.Control.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Control
    private readonly InputActionMap m_Control;
    private List<IControlActions> m_ControlActionsCallbackInterfaces = new List<IControlActions>();
    private readonly InputAction m_Control_LeftStick;
    private readonly InputAction m_Control_RightStick;
    private readonly InputAction m_Control_Up;
    private readonly InputAction m_Control_Left;
    private readonly InputAction m_Control_Down;
    private readonly InputAction m_Control_Right;
    private readonly InputAction m_Control_Triangle;
    private readonly InputAction m_Control_Square;
    private readonly InputAction m_Control_Cross;
    private readonly InputAction m_Control_Circle;
    private readonly InputAction m_Control_LSB;
    private readonly InputAction m_Control_RSB;
    private readonly InputAction m_Control_L1;
    private readonly InputAction m_Control_R1;
    private readonly InputAction m_Control_L2;
    private readonly InputAction m_Control_R2;
    private readonly InputAction m_Control_Auto_1;
    private readonly InputAction m_Control_Auto_2;
    private readonly InputAction m_Control_Auto_3;
    private readonly InputAction m_Control_Auto_4;
    private readonly InputAction m_Control_Auto_5;
    private readonly InputAction m_Control_Auto_6;
    private readonly InputAction m_Control_Auto_7;
    private readonly InputAction m_Control_Auto_8;
    private readonly InputAction m_Control_Auto_9;
    private readonly InputAction m_Control_Auto_10;
    private readonly InputAction m_Control_Auto_11;
    /// <summary>
    /// Provides access to input actions defined in input action map "Control".
    /// </summary>
    public struct ControlActions
    {
        private @GameInputs m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public ControlActions(@GameInputs wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Control/LeftStick".
        /// </summary>
        public InputAction @LeftStick => m_Wrapper.m_Control_LeftStick;
        /// <summary>
        /// Provides access to the underlying input action "Control/RightStick".
        /// </summary>
        public InputAction @RightStick => m_Wrapper.m_Control_RightStick;
        /// <summary>
        /// Provides access to the underlying input action "Control/Up".
        /// </summary>
        public InputAction @Up => m_Wrapper.m_Control_Up;
        /// <summary>
        /// Provides access to the underlying input action "Control/Left".
        /// </summary>
        public InputAction @Left => m_Wrapper.m_Control_Left;
        /// <summary>
        /// Provides access to the underlying input action "Control/Down".
        /// </summary>
        public InputAction @Down => m_Wrapper.m_Control_Down;
        /// <summary>
        /// Provides access to the underlying input action "Control/Right".
        /// </summary>
        public InputAction @Right => m_Wrapper.m_Control_Right;
        /// <summary>
        /// Provides access to the underlying input action "Control/Triangle".
        /// </summary>
        public InputAction @Triangle => m_Wrapper.m_Control_Triangle;
        /// <summary>
        /// Provides access to the underlying input action "Control/Square".
        /// </summary>
        public InputAction @Square => m_Wrapper.m_Control_Square;
        /// <summary>
        /// Provides access to the underlying input action "Control/Cross".
        /// </summary>
        public InputAction @Cross => m_Wrapper.m_Control_Cross;
        /// <summary>
        /// Provides access to the underlying input action "Control/Circle".
        /// </summary>
        public InputAction @Circle => m_Wrapper.m_Control_Circle;
        /// <summary>
        /// Provides access to the underlying input action "Control/LSB".
        /// </summary>
        public InputAction @LSB => m_Wrapper.m_Control_LSB;
        /// <summary>
        /// Provides access to the underlying input action "Control/RSB".
        /// </summary>
        public InputAction @RSB => m_Wrapper.m_Control_RSB;
        /// <summary>
        /// Provides access to the underlying input action "Control/L1".
        /// </summary>
        public InputAction @L1 => m_Wrapper.m_Control_L1;
        /// <summary>
        /// Provides access to the underlying input action "Control/R1".
        /// </summary>
        public InputAction @R1 => m_Wrapper.m_Control_R1;
        /// <summary>
        /// Provides access to the underlying input action "Control/L2".
        /// </summary>
        public InputAction @L2 => m_Wrapper.m_Control_L2;
        /// <summary>
        /// Provides access to the underlying input action "Control/R2".
        /// </summary>
        public InputAction @R2 => m_Wrapper.m_Control_R2;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_1".
        /// </summary>
        public InputAction @Auto_1 => m_Wrapper.m_Control_Auto_1;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_2".
        /// </summary>
        public InputAction @Auto_2 => m_Wrapper.m_Control_Auto_2;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_3".
        /// </summary>
        public InputAction @Auto_3 => m_Wrapper.m_Control_Auto_3;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_4".
        /// </summary>
        public InputAction @Auto_4 => m_Wrapper.m_Control_Auto_4;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_5".
        /// </summary>
        public InputAction @Auto_5 => m_Wrapper.m_Control_Auto_5;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_6".
        /// </summary>
        public InputAction @Auto_6 => m_Wrapper.m_Control_Auto_6;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_7".
        /// </summary>
        public InputAction @Auto_7 => m_Wrapper.m_Control_Auto_7;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_8".
        /// </summary>
        public InputAction @Auto_8 => m_Wrapper.m_Control_Auto_8;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_9".
        /// </summary>
        public InputAction @Auto_9 => m_Wrapper.m_Control_Auto_9;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_10".
        /// </summary>
        public InputAction @Auto_10 => m_Wrapper.m_Control_Auto_10;
        /// <summary>
        /// Provides access to the underlying input action "Control/Auto_11".
        /// </summary>
        public InputAction @Auto_11 => m_Wrapper.m_Control_Auto_11;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Control; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="ControlActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(ControlActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="ControlActions" />
        public void AddCallbacks(IControlActions instance)
        {
            if (instance == null || m_Wrapper.m_ControlActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ControlActionsCallbackInterfaces.Add(instance);
            @LeftStick.started += instance.OnLeftStick;
            @LeftStick.performed += instance.OnLeftStick;
            @LeftStick.canceled += instance.OnLeftStick;
            @RightStick.started += instance.OnRightStick;
            @RightStick.performed += instance.OnRightStick;
            @RightStick.canceled += instance.OnRightStick;
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Left.started += instance.OnLeft;
            @Left.performed += instance.OnLeft;
            @Left.canceled += instance.OnLeft;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @Right.started += instance.OnRight;
            @Right.performed += instance.OnRight;
            @Right.canceled += instance.OnRight;
            @Triangle.started += instance.OnTriangle;
            @Triangle.performed += instance.OnTriangle;
            @Triangle.canceled += instance.OnTriangle;
            @Square.started += instance.OnSquare;
            @Square.performed += instance.OnSquare;
            @Square.canceled += instance.OnSquare;
            @Cross.started += instance.OnCross;
            @Cross.performed += instance.OnCross;
            @Cross.canceled += instance.OnCross;
            @Circle.started += instance.OnCircle;
            @Circle.performed += instance.OnCircle;
            @Circle.canceled += instance.OnCircle;
            @LSB.started += instance.OnLSB;
            @LSB.performed += instance.OnLSB;
            @LSB.canceled += instance.OnLSB;
            @RSB.started += instance.OnRSB;
            @RSB.performed += instance.OnRSB;
            @RSB.canceled += instance.OnRSB;
            @L1.started += instance.OnL1;
            @L1.performed += instance.OnL1;
            @L1.canceled += instance.OnL1;
            @R1.started += instance.OnR1;
            @R1.performed += instance.OnR1;
            @R1.canceled += instance.OnR1;
            @L2.started += instance.OnL2;
            @L2.performed += instance.OnL2;
            @L2.canceled += instance.OnL2;
            @R2.started += instance.OnR2;
            @R2.performed += instance.OnR2;
            @R2.canceled += instance.OnR2;
            @Auto_1.started += instance.OnAuto_1;
            @Auto_1.performed += instance.OnAuto_1;
            @Auto_1.canceled += instance.OnAuto_1;
            @Auto_2.started += instance.OnAuto_2;
            @Auto_2.performed += instance.OnAuto_2;
            @Auto_2.canceled += instance.OnAuto_2;
            @Auto_3.started += instance.OnAuto_3;
            @Auto_3.performed += instance.OnAuto_3;
            @Auto_3.canceled += instance.OnAuto_3;
            @Auto_4.started += instance.OnAuto_4;
            @Auto_4.performed += instance.OnAuto_4;
            @Auto_4.canceled += instance.OnAuto_4;
            @Auto_5.started += instance.OnAuto_5;
            @Auto_5.performed += instance.OnAuto_5;
            @Auto_5.canceled += instance.OnAuto_5;
            @Auto_6.started += instance.OnAuto_6;
            @Auto_6.performed += instance.OnAuto_6;
            @Auto_6.canceled += instance.OnAuto_6;
            @Auto_7.started += instance.OnAuto_7;
            @Auto_7.performed += instance.OnAuto_7;
            @Auto_7.canceled += instance.OnAuto_7;
            @Auto_8.started += instance.OnAuto_8;
            @Auto_8.performed += instance.OnAuto_8;
            @Auto_8.canceled += instance.OnAuto_8;
            @Auto_9.started += instance.OnAuto_9;
            @Auto_9.performed += instance.OnAuto_9;
            @Auto_9.canceled += instance.OnAuto_9;
            @Auto_10.started += instance.OnAuto_10;
            @Auto_10.performed += instance.OnAuto_10;
            @Auto_10.canceled += instance.OnAuto_10;
            @Auto_11.started += instance.OnAuto_11;
            @Auto_11.performed += instance.OnAuto_11;
            @Auto_11.canceled += instance.OnAuto_11;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="ControlActions" />
        private void UnregisterCallbacks(IControlActions instance)
        {
            @LeftStick.started -= instance.OnLeftStick;
            @LeftStick.performed -= instance.OnLeftStick;
            @LeftStick.canceled -= instance.OnLeftStick;
            @RightStick.started -= instance.OnRightStick;
            @RightStick.performed -= instance.OnRightStick;
            @RightStick.canceled -= instance.OnRightStick;
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Left.started -= instance.OnLeft;
            @Left.performed -= instance.OnLeft;
            @Left.canceled -= instance.OnLeft;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @Right.started -= instance.OnRight;
            @Right.performed -= instance.OnRight;
            @Right.canceled -= instance.OnRight;
            @Triangle.started -= instance.OnTriangle;
            @Triangle.performed -= instance.OnTriangle;
            @Triangle.canceled -= instance.OnTriangle;
            @Square.started -= instance.OnSquare;
            @Square.performed -= instance.OnSquare;
            @Square.canceled -= instance.OnSquare;
            @Cross.started -= instance.OnCross;
            @Cross.performed -= instance.OnCross;
            @Cross.canceled -= instance.OnCross;
            @Circle.started -= instance.OnCircle;
            @Circle.performed -= instance.OnCircle;
            @Circle.canceled -= instance.OnCircle;
            @LSB.started -= instance.OnLSB;
            @LSB.performed -= instance.OnLSB;
            @LSB.canceled -= instance.OnLSB;
            @RSB.started -= instance.OnRSB;
            @RSB.performed -= instance.OnRSB;
            @RSB.canceled -= instance.OnRSB;
            @L1.started -= instance.OnL1;
            @L1.performed -= instance.OnL1;
            @L1.canceled -= instance.OnL1;
            @R1.started -= instance.OnR1;
            @R1.performed -= instance.OnR1;
            @R1.canceled -= instance.OnR1;
            @L2.started -= instance.OnL2;
            @L2.performed -= instance.OnL2;
            @L2.canceled -= instance.OnL2;
            @R2.started -= instance.OnR2;
            @R2.performed -= instance.OnR2;
            @R2.canceled -= instance.OnR2;
            @Auto_1.started -= instance.OnAuto_1;
            @Auto_1.performed -= instance.OnAuto_1;
            @Auto_1.canceled -= instance.OnAuto_1;
            @Auto_2.started -= instance.OnAuto_2;
            @Auto_2.performed -= instance.OnAuto_2;
            @Auto_2.canceled -= instance.OnAuto_2;
            @Auto_3.started -= instance.OnAuto_3;
            @Auto_3.performed -= instance.OnAuto_3;
            @Auto_3.canceled -= instance.OnAuto_3;
            @Auto_4.started -= instance.OnAuto_4;
            @Auto_4.performed -= instance.OnAuto_4;
            @Auto_4.canceled -= instance.OnAuto_4;
            @Auto_5.started -= instance.OnAuto_5;
            @Auto_5.performed -= instance.OnAuto_5;
            @Auto_5.canceled -= instance.OnAuto_5;
            @Auto_6.started -= instance.OnAuto_6;
            @Auto_6.performed -= instance.OnAuto_6;
            @Auto_6.canceled -= instance.OnAuto_6;
            @Auto_7.started -= instance.OnAuto_7;
            @Auto_7.performed -= instance.OnAuto_7;
            @Auto_7.canceled -= instance.OnAuto_7;
            @Auto_8.started -= instance.OnAuto_8;
            @Auto_8.performed -= instance.OnAuto_8;
            @Auto_8.canceled -= instance.OnAuto_8;
            @Auto_9.started -= instance.OnAuto_9;
            @Auto_9.performed -= instance.OnAuto_9;
            @Auto_9.canceled -= instance.OnAuto_9;
            @Auto_10.started -= instance.OnAuto_10;
            @Auto_10.performed -= instance.OnAuto_10;
            @Auto_10.canceled -= instance.OnAuto_10;
            @Auto_11.started -= instance.OnAuto_11;
            @Auto_11.performed -= instance.OnAuto_11;
            @Auto_11.canceled -= instance.OnAuto_11;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="ControlActions.UnregisterCallbacks(IControlActions)" />.
        /// </summary>
        /// <seealso cref="ControlActions.UnregisterCallbacks(IControlActions)" />
        public void RemoveCallbacks(IControlActions instance)
        {
            if (m_Wrapper.m_ControlActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="ControlActions.AddCallbacks(IControlActions)" />
        /// <seealso cref="ControlActions.RemoveCallbacks(IControlActions)" />
        /// <seealso cref="ControlActions.UnregisterCallbacks(IControlActions)" />
        public void SetCallbacks(IControlActions instance)
        {
            foreach (var item in m_Wrapper.m_ControlActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ControlActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="ControlActions" /> instance referencing this action map.
    /// </summary>
    public ControlActions @Control => new ControlActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Control" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="ControlActions.AddCallbacks(IControlActions)" />
    /// <seealso cref="ControlActions.RemoveCallbacks(IControlActions)" />
    public interface IControlActions
    {
        /// <summary>
        /// Method invoked when associated input action "LeftStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLeftStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RightStick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRightStick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Up" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnUp(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLeft(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Down" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDown(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRight(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Triangle" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnTriangle(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Square" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSquare(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Cross" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCross(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Circle" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCircle(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "LSB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLSB(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RSB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRSB(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "L1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnL1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "R1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnR1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "L2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnL2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "R2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnR2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_3(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_4(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_5(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_6(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_7" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_7(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_8" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_8(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_9" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_9(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_10" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_10(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Auto_11" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnAuto_11(InputAction.CallbackContext context);
    }
}
